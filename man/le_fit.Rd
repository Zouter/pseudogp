% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/pseudogp.R
\docType{data}
\name{le_fit}
\alias{le_fit}
\title{Stan fit for laplacian eigenmaps representation of monocle}
\format{\preformatted{Formal class 'stanfit' [package "rstan"] with 10 slots
  ..@ model_name: chr "pseudogp"
  ..@ model_pars: chr [1:5] "lambda" "sigma" "g" "t" ...
  ..@ par_dims  :List of 5
  .. ..$ lambda: num [1:2] 1 2
  .. ..$ sigma : num [1:2] 1 2
  .. ..$ g     : num 1
  .. ..$ t     : num 155
  .. ..$ lp__  : num(0) 
  ..@ mode      : int 0
  ..@ sim       :List of 12
  .. ..$ samples    :List of 1
  .. .. ..$ :List of 161
  .. .. .. ..$ lambda[1,1]: num [1:1000] 2.47e-05 2.47e-05 2.47e-05 2.47e-05 9.35e-04 ...
  .. .. .. ..$ lambda[1,2]: num [1:1000] 0.000129 0.000129 0.000129 0.000129 0.000292 ...
  .. .. .. ..$ sigma[1,1] : num [1:1000] 1.25 1.25 1.25 1.25 0.793 ...
  .. .. .. ..$ sigma[1,2] : num [1:1000] 0.65 0.65 0.65 0.65 1.63 ...
  .. .. .. ..$ g[1]       : num [1:1000] 6.13 6.13 6.13 6.13 4.31 ...
  .. .. .. ..$ t[1]       : num [1:1000] 0.492 0.492 0.492 0.492 0.466 ...
  .. .. .. ..$ t[2]       : num [1:1000] 0.735 0.735 0.735 0.735 0.734 ...
  .. .. .. ..$ t[3]       : num [1:1000] 0.29 0.29 0.29 0.29 0.549 ...
  .. .. .. ..$ t[4]       : num [1:1000] 0.375 0.375 0.375 0.375 0.45 ...
  .. .. .. ..$ t[5]       : num [1:1000] 0.332 0.332 0.332 0.332 0.324 ...
  .. .. .. ..$ t[6]       : num [1:1000] 0.0859 0.0859 0.0859 0.0859 0.3501 ...
  .. .. .. ..$ t[7]       : num [1:1000] 0.432 0.432 0.432 0.432 0.275 ...
  .. .. .. ..$ t[8]       : num [1:1000] 0.476 0.476 0.476 0.476 0.628 ...
  .. .. .. ..$ t[9]       : num [1:1000] 0.417 0.417 0.417 0.417 0.049 ...
  .. .. .. ..$ t[10]      : num [1:1000] 0.812 0.812 0.812 0.812 0.775 ...
  .. .. .. ..$ t[11]      : num [1:1000] 0.149 0.149 0.149 0.149 0.245 ...
  .. .. .. ..$ t[12]      : num [1:1000] 0.525 0.525 0.525 0.525 0.54 ...
  .. .. .. ..$ t[13]      : num [1:1000] 0.6 0.6 0.6 0.6 0.337 ...
  .. .. .. ..$ t[14]      : num [1:1000] 0.166 0.166 0.166 0.166 0.827 ...
  .. .. .. ..$ t[15]      : num [1:1000] 0.743 0.743 0.743 0.743 0.734 ...
  .. .. .. ..$ t[16]      : num [1:1000] 0.574 0.574 0.574 0.574 0.838 ...
  .. .. .. ..$ t[17]      : num [1:1000] 0.338 0.338 0.338 0.338 0.058 ...
  .. .. .. ..$ t[18]      : num [1:1000] 0.59 0.59 0.59 0.59 0.605 ...
  .. .. .. ..$ t[19]      : num [1:1000] 0.793 0.793 0.793 0.793 0.839 ...
  .. .. .. ..$ t[20]      : num [1:1000] 0.802 0.802 0.802 0.802 0.819 ...
  .. .. .. ..$ t[21]      : num [1:1000] 0.791 0.791 0.791 0.791 0.928 ...
  .. .. .. ..$ t[22]      : num [1:1000] 0.328 0.328 0.328 0.328 0.15 ...
  .. .. .. ..$ t[23]      : num [1:1000] 0.9747 0.9747 0.9747 0.9747 0.0529 ...
  .. .. .. ..$ t[24]      : num [1:1000] 0.768 0.768 0.768 0.768 0.78 ...
  .. .. .. ..$ t[25]      : num [1:1000] 0.00662 0.00662 0.00662 0.00662 0.99624 ...
  .. .. .. ..$ t[26]      : num [1:1000] 0.124 0.124 0.124 0.124 0.235 ...
  .. .. .. ..$ t[27]      : num [1:1000] 0.288 0.288 0.288 0.288 0.4 ...
  .. .. .. ..$ t[28]      : num [1:1000] 0.802 0.802 0.802 0.802 0.069 ...
  .. .. .. ..$ t[29]      : num [1:1000] 0.36 0.36 0.36 0.36 0.973 ...
  .. .. .. ..$ t[30]      : num [1:1000] 0.67 0.67 0.67 0.67 0.605 ...
  .. .. .. ..$ t[31]      : num [1:1000] 0.941 0.941 0.941 0.941 0.114 ...
  .. .. .. ..$ t[32]      : num [1:1000] 0.129 0.129 0.129 0.129 0.164 ...
  .. .. .. ..$ t[33]      : num [1:1000] 0.341 0.341 0.341 0.341 0.873 ...
  .. .. .. ..$ t[34]      : num [1:1000] 0.732 0.732 0.732 0.732 0.718 ...
  .. .. .. ..$ t[35]      : num [1:1000] 0.98285 0.98285 0.98285 0.98285 0.00729 ...
  .. .. .. ..$ t[36]      : num [1:1000] 0.898 0.898 0.898 0.898 0.428 ...
  .. .. .. ..$ t[37]      : num [1:1000] 0.169 0.169 0.169 0.169 0.204 ...
  .. .. .. ..$ t[38]      : num [1:1000] 0.117 0.117 0.117 0.117 0.17 ...
  .. .. .. ..$ t[39]      : num [1:1000] 0.136 0.136 0.136 0.136 0.864 ...
  .. .. .. ..$ t[40]      : num [1:1000] 0.826 0.826 0.826 0.826 0.59 ...
  .. .. .. ..$ t[41]      : num [1:1000] 0.194 0.194 0.194 0.194 0.177 ...
  .. .. .. ..$ t[42]      : num [1:1000] 0.0777 0.0777 0.0777 0.0777 0.99 ...
  .. .. .. ..$ t[43]      : num [1:1000] 0.691 0.691 0.691 0.691 0.188 ...
  .. .. .. ..$ t[44]      : num [1:1000] 0.881 0.881 0.881 0.881 0.233 ...
  .. .. .. ..$ t[45]      : num [1:1000] 0.655 0.655 0.655 0.655 0.786 ...
  .. .. .. ..$ t[46]      : num [1:1000] 0.661 0.661 0.661 0.661 0.82 ...
  .. .. .. ..$ t[47]      : num [1:1000] 0.662 0.662 0.662 0.662 0.414 ...
  .. .. .. ..$ t[48]      : num [1:1000] 0.752 0.752 0.752 0.752 0.84 ...
  .. .. .. ..$ t[49]      : num [1:1000] 0.995 0.995 0.995 0.995 0.005 ...
  .. .. .. ..$ t[50]      : num [1:1000] 0.299 0.299 0.299 0.299 0.396 ...
  .. .. .. ..$ t[51]      : num [1:1000] 0.173 0.173 0.173 0.173 0.33 ...
  .. .. .. ..$ t[52]      : num [1:1000] 0.513 0.513 0.513 0.513 0.601 ...
  .. .. .. ..$ t[53]      : num [1:1000] 0.787 0.787 0.787 0.787 0.733 ...
  .. .. .. ..$ t[54]      : num [1:1000] 0.0407 0.0407 0.0407 0.0407 0.4832 ...
  .. .. .. ..$ t[55]      : num [1:1000] 0.9772 0.9772 0.9772 0.9772 0.0274 ...
  .. .. .. ..$ t[56]      : num [1:1000] 0.112 0.112 0.112 0.112 0.23 ...
  .. .. .. ..$ t[57]      : num [1:1000] 0.504 0.504 0.504 0.504 0.798 ...
  .. .. .. ..$ t[58]      : num [1:1000] 0.733 0.733 0.733 0.733 0.232 ...
  .. .. .. ..$ t[59]      : num [1:1000] 0.726 0.726 0.726 0.726 0.593 ...
  .. .. .. ..$ t[60]      : num [1:1000] 0.828 0.828 0.828 0.828 0.204 ...
  .. .. .. ..$ t[61]      : num [1:1000] 0.866 0.866 0.866 0.866 0.638 ...
  .. .. .. ..$ t[62]      : num [1:1000] 0.928 0.928 0.928 0.928 0.682 ...
  .. .. .. ..$ t[63]      : num [1:1000] 0.265 0.265 0.265 0.265 0.323 ...
  .. .. .. ..$ t[64]      : num [1:1000] 0.35 0.35 0.35 0.35 0.373 ...
  .. .. .. ..$ t[65]      : num [1:1000] 0.178 0.178 0.178 0.178 0.646 ...
  .. .. .. ..$ t[66]      : num [1:1000] 0.875 0.875 0.875 0.875 0.765 ...
  .. .. .. ..$ t[67]      : num [1:1000] 0.61 0.61 0.61 0.61 0.365 ...
  .. .. .. ..$ t[68]      : num [1:1000] 0.206 0.206 0.206 0.206 0.956 ...
  .. .. .. ..$ t[69]      : num [1:1000] 0.0821 0.0821 0.0821 0.0821 0.563 ...
  .. .. .. ..$ t[70]      : num [1:1000] 0.452 0.452 0.452 0.452 0.524 ...
  .. .. .. ..$ t[71]      : num [1:1000] 0.846 0.846 0.846 0.846 0.775 ...
  .. .. .. ..$ t[72]      : num [1:1000] 0.894 0.894 0.894 0.894 0.368 ...
  .. .. .. ..$ t[73]      : num [1:1000] 0.99712 0.99712 0.99712 0.99712 0.00215 ...
  .. .. .. ..$ t[74]      : num [1:1000] 0.818 0.818 0.818 0.818 0.76 ...
  .. .. .. ..$ t[75]      : num [1:1000] 0.468 0.468 0.468 0.468 0.732 ...
  .. .. .. ..$ t[76]      : num [1:1000] 0.52 0.52 0.52 0.52 0.255 ...
  .. .. .. ..$ t[77]      : num [1:1000] 0.707 0.707 0.707 0.707 0.65 ...
  .. .. .. ..$ t[78]      : num [1:1000] 0.112 0.112 0.112 0.112 0.159 ...
  .. .. .. ..$ t[79]      : num [1:1000] 0.824 0.824 0.824 0.824 0.141 ...
  .. .. .. ..$ t[80]      : num [1:1000] 0.638 0.638 0.638 0.638 0.842 ...
  .. .. .. ..$ t[81]      : num [1:1000] 0.398 0.398 0.398 0.398 0.609 ...
  .. .. .. ..$ t[82]      : num [1:1000] 0.881 0.881 0.881 0.881 0.63 ...
  .. .. .. ..$ t[83]      : num [1:1000] 0.45 0.45 0.45 0.45 0.437 ...
  .. .. .. ..$ t[84]      : num [1:1000] 0.666 0.666 0.666 0.666 0.381 ...
  .. .. .. ..$ t[85]      : num [1:1000] 0.711 0.711 0.711 0.711 0.881 ...
  .. .. .. ..$ t[86]      : num [1:1000] 0.539 0.539 0.539 0.539 0.116 ...
  .. .. .. ..$ t[87]      : num [1:1000] 0.23 0.23 0.23 0.23 0.218 ...
  .. .. .. ..$ t[88]      : num [1:1000] 0.102 0.102 0.102 0.102 0.61 ...
  .. .. .. ..$ t[89]      : num [1:1000] 0.874 0.874 0.874 0.874 0.874 ...
  .. .. .. ..$ t[90]      : num [1:1000] 0.697 0.697 0.697 0.697 0.635 ...
  .. .. .. ..$ t[91]      : num [1:1000] 0.672 0.672 0.672 0.672 0.942 ...
  .. .. .. ..$ t[92]      : num [1:1000] 0.513 0.513 0.513 0.513 0.351 ...
  .. .. .. ..$ t[93]      : num [1:1000] 0.289 0.289 0.289 0.289 0.95 ...
  .. .. .. ..$ t[94]      : num [1:1000] 0.768 0.768 0.768 0.768 0.848 ...
  .. .. .. .. [list output truncated]
  .. .. .. ..- attr(*, "test_grad")= logi FALSE
  .. .. .. ..- attr(*, "args")=List of 15
  .. .. .. .. ..$ append_samples    : logi FALSE
  .. .. .. .. ..$ chain_id          : num 1
  .. .. .. .. ..$ control           :List of 12
  .. .. .. .. .. ..$ adapt_delta      : num 0.8
  .. .. .. .. .. ..$ adapt_engaged    : logi TRUE
  .. .. .. .. .. ..$ adapt_gamma      : num 0.05
  .. .. .. .. .. ..$ adapt_init_buffer: num 75
  .. .. .. .. .. ..$ adapt_kappa      : num 0.75
  .. .. .. .. .. ..$ adapt_t0         : num 10
  .. .. .. .. .. ..$ adapt_term_buffer: num 50
  .. .. .. .. .. ..$ adapt_window     : num 25
  .. .. .. .. .. ..$ max_treedepth    : int 10
  .. .. .. .. .. ..$ metric           : chr "diag_e"
  .. .. .. .. .. ..$ stepsize         : num 1
  .. .. .. .. .. ..$ stepsize_jitter  : num 0
  .. .. .. .. ..$ enable_random_init: logi TRUE
  .. .. .. .. ..$ init              : chr "random"
  .. .. .. .. ..$ init_list         : NULL
  .. .. .. .. ..$ init_radius       : num 2
  .. .. .. .. ..$ iter              : int 1000
  .. .. .. .. ..$ method            : chr "sampling"
  .. .. .. .. ..$ random_seed       : chr "957022342"
  .. .. .. .. ..$ refresh           : int 100
  .. .. .. .. ..$ sampler_t         : chr "NUTS(diag_e)"
  .. .. .. .. ..$ test_grad         : logi FALSE
  .. .. .. .. ..$ thin              : int 1
  .. .. .. .. ..$ warmup            : int 500
  .. .. .. ..- attr(*, "inits")= num [1:160] 4.04 2.502 0.378 0.551 3.455 ...
  .. .. .. ..- attr(*, "mean_pars")= num [1:160] 3.7633 1.5252 0.2392 0.0563 2.9169 ...
  .. .. .. ..- attr(*, "mean_lp__")= num -180
  .. .. .. ..- attr(*, "adaptation_info")= chr "# Adaptation terminated\\n# Step size = 0.157504\\n# Diagonal elements of inverse mass matrix:\\n# 0.112584, 0.119954, 0.0248275, "| __truncated__
  .. .. .. ..- attr(*, "elapsed_time")= Named num [1:2] 147 108
  .. .. .. .. ..- attr(*, "names")= chr [1:2] "warmup" "sample"
  .. .. .. ..- attr(*, "sampler_params")=List of 5
  .. .. .. .. ..$ accept_stat__: num [1:1000] 1 0 0 0.00958 0.99974 ...
  .. .. .. .. ..$ stepsize__   : num [1:1000] 0.125 14.3855 2.4312 0.2398 0.0191 ...
  .. .. .. .. ..$ treedepth__  : num [1:1000] 6 1 1 4 9 8 8 7 5 5 ...
  .. .. .. .. ..$ n_leapfrog__ : num [1:1000] 63 1 1 8 511 255 255 127 31 31 ...
  .. .. .. .. ..$ n_divergent__: num [1:1000] 0 1 1 1 0 0 0 0 0 0 ...
  .. ..$ iter       : num 1000
  .. ..$ thin       : num 1
  .. ..$ warmup     : num 500
  .. ..$ chains     : num 1
  .. ..$ n_save     : num 1000
  .. ..$ warmup2    : num 500
  .. ..$ permutation:List of 1
  .. .. ..$ : int [1:500] 73 30 376 230 272 480 347 47 76 237 ...
  .. ..$ pars_oi    : chr [1:5] "lambda" "sigma" "g" "t" ...
  .. ..$ dims_oi    :List of 5
  .. .. ..$ lambda: num [1:2] 1 2
  .. .. ..$ sigma : num [1:2] 1 2
  .. .. ..$ g     : num 1
  .. .. ..$ t     : num 155
  .. .. ..$ lp__  : num(0) 
  .. ..$ fnames_oi  : chr [1:161] "lambda[1,1]" "lambda[1,2]" "sigma[1,1]" "sigma[1,2]" ...
  .. ..$ n_flatnames: int 161
  ..@ inits     :List of 1
  .. ..$ :List of 4
  .. .. ..$ lambda: num [1, 1:2] 4.04 2.5
  .. .. ..$ sigma : num [1, 1:2] 0.378 0.551
  .. .. ..$ g     : num [1(1d)] 3.45
  .. .. ..$ t     : num [1:155(1d)] 0.309 0.197 0.829 0.482 0.651 ...
  ..@ stan_args :List of 1
  .. ..$ :List of 9
  .. .. ..$ chain_id          : int 1
  .. .. ..$ iter              : int 1000
  .. .. ..$ thin              : int 1
  .. .. ..$ seed              : int 957022342
  .. .. ..$ warmup            : num 500
  .. .. ..$ init              : chr "random"
  .. .. ..$ algorithm         : chr "NUTS"
  .. .. ..$ check_unknown_args: logi FALSE
  .. .. ..$ method            : chr "sampling"
  ..@ stanmodel :Formal class 'stanmodel' [package "rstan"] with 4 slots
  .. .. ..@ model_name: chr "pseudogp"
  .. .. ..@ model_code: atomic [1:1] /*
STAN implementation of pseudogp2
This uses multiple sources of data to construct pseudotemporal ordering.

Generalising to any number of data sources of any dimension (but all must be same dimension)

kieran.campbell@sjc.ox.ac.uk
*/

data \{
  int<lower = 1> Ns; // number of sources
  int<lower = 1> P; // number of dimensions of each source
  int<lower = 1> N; //
  vector[N] X[Ns, P]; // Embeddings: an Ns by P array of vector embeddings
  real<lower = 0> gamma_alpha;
  real<lower = 0> gamma_beta;
  real pseudotime_mean;
  real<lower = 0> pseudotime_var;
\}

transformed data \{
  vector[N] mu;
  for(i in 1:N) mu[i] <- 0;
\}

parameters \{
  real<lower = 0> lambda[Ns, P];
  real<lower = 0> sigma[Ns, P];

  real<lower = 0> g[Ns]; // different hyperparameter on lambda for each data source
  real<lower = 0, upper = 1> t[N];
\}

model \{
  matrix[N, N] Sigma[Ns, P]; // Ns*P covariance matrices

  for(k in 1:Ns) \{
    for(l in 1:P) \{
      // off-diagonal
      for(i in 1:(N-1)) \{
          for(j in (i+1):N) \{
            Sigma[k,l,i,j] <- exp(-lambda[k,l] * pow(t[i] - t[j], 2));
            Sigma[k,l,j,i] <- Sigma[k,l,i,j];
        \}
      \}
      // diagonal
      for(m in 1:N) \{
        Sigma[k,l,m,m] <- 1 + sigma[k,l] + 10e-3;
      \}
    \}
  \}

  g ~ gamma(gamma_alpha, gamma_beta);

  for(i in 1:Ns) \{
    for(j in 1:P) \{
      sigma[i,j] ~ inv_gamma(1.0, 1.0);
      lambda[i,j] ~ exponential(g[i]);
    \}
  \}

  for(i in 1:N) \{
    t[i] ~ normal(pseudotime_mean, pseudotime_var);
  \}

  for(i in 1:Ns) \{
    for(j in 1:P) \{
      X[i,j] ~ multi_normal(mu, Sigma[i,j]);
    \}
  \}

\}


  .. .. .. ..- attr(*, "model_name2")= chr "pseudogp"
  .. .. ..@ model_cpp :List of 2
  .. .. .. ..$ model_cppname: chr "model371c51eb9e2e_pseudogp"
  .. .. .. ..$ model_cppcode: chr "// Code generated by Stan version 2.8\\n\\n#include <stan/model/model_header.hpp>\\n\\nnamespace model371c51eb9e2e_pseudogp_namespa"| __truncated__
  .. .. ..@ dso       :Formal class 'cxxdso' [package "rstan"] with 7 slots
  .. .. .. .. ..@ sig         :List of 1
  .. .. .. .. .. ..$ file371c43de0806: chr(0) 
  .. .. .. .. ..@ dso_saved   : logi TRUE
  .. .. .. .. ..@ dso_filename: chr "file371c43de0806"
  .. .. .. .. ..@ modulename  : chr "stan_fit4model371c51eb9e2e_pseudogp_mod"
  .. .. .. .. ..@ system      : chr "x86_64, darwin13.4.0"
  .. .. .. .. ..@ cxxflags    : chr "CXXFLAGS = -Wall -mtune=core2 -O3 $(LTO)  #set_by_rstan"
  .. .. .. .. ..@ .CXXDSOMISC :<environment: 0x132b6ab78> 
  ..@ date      : chr "Tue Dec  1 13:45:45 2015"
  ..@ .MISC     :<environment: 0x143793e30> 
}}
\usage{
le_fit
}
\description{
Stan fit for laplacian eigenmaps representation of monocle
}
\keyword{datasets}

